<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="mart.modules.basket.basketOraMapper">
	<sql id="BSK_TABLE_NAME">UNI_TLSN_APLY_BSK</sql>
	
	<select id="getCurInfo" parameterType="java.util.HashMap" resultType="dataMap">
			SELECT YEAR, SMT
			FROM (
			    SELECT YEAR, SMT, FR_DT,
			           ROW_NUMBER() OVER (ORDER BY FR_DT DESC) AS rn
			    FROM SCO.SYS080TB
			    WHERE HAK_DESC LIKE '%수강편람%'
			    AND SMT IN ('GH0210','GH0220')
			    AND FR_DT <![CDATA[<]]>  TO_CHAR(SYSDATE, 'YYYYMMDD')
			    AND SINBUN_CODE = 'UD340001'
			) BASE
			WHERE rn = 1
	</select>

	<select id="selectMyTmCount" parameterType="java.util.HashMap" resultType="java.lang.Integer">
		SELECT count(*) FROM INU_UNI.SCOR400
		WHERE STUNO = #{stuno}
	</select>
	
	<select id="selectEqualTmAvgHpCount" parameterType="java.util.HashMap" resultType="java.lang.Integer">
		SELECT 
			count(*)
		FROM 
		(SELECT 
			STUNO
			,SUM(ACQ_HP) AS ACQ_HP
			,(SELECT count(*) FROM INU_UNI.SCOR400 B WHERE A.STUNO = B.STUNO) AS count
		FROM INU_UNI.SCOR400 A
		WHERE HG_MJ_CD = #{hgMjCd} GROUP BY STUNO)
		WHERE count = #{count}
	</select>
	
	<select id="selectEqualTmAvgHp" parameterType="java.util.HashMap" resultType="java.lang.Integer">
		SELECT 
			sum(ACQ_HP)
		FROM 
		(SELECT 
			STUNO
			,SUM(ACQ_HP) AS ACQ_HP
			,(SELECT count(*) FROM INU_UNI.SCOR400 B WHERE A.STUNO = B.STUNO) AS count
		FROM INU_UNI.SCOR400 A
		WHERE HG_MJ_CD = #{hgMjCd} GROUP BY STUNO)
		WHERE count = #{count}
	</select>
	
	<!-- 마이페이지 장바구니 상세정보-->
	<select id="getMyBasketView" parameterType="String" resultType="dataMap">
			 WITH NOW_YEAR_SMT AS (
			    SELECT YEAR, SMT
			    FROM (
			        SELECT YEAR, SMT, FR_DT,
			               ROW_NUMBER() OVER (ORDER BY FR_DT DESC) AS rn
			        FROM SCO.SYS080TB
			        WHERE HAK_DESC LIKE '%수강편람%'
			        AND SMT IN ('GH0210','GH0220')
			        AND FR_DT &lt; TO_CHAR(SYSDATE, 'YYYYMMDD')
			        AND SINBUN_CODE = 'UD340001'
			    ) BASE
			    WHERE rn = 1
			),
			CURR AS (
				SELECT  UF_SUF_SUBJECT_NM(A.SUBJECT_CD,1) AS SUBJECT_NM,
                          UF_SUF_SUBJECT_NM(A.SUBJECT_CD,2)  AS SUBJECT_ENM,
                          A.SUBJECT_CD,
                          A.YEAR,
                          A.SMT,
                          A.SISU,
                          A.EMP_NO,
                          A.DIVCLS,
                          UF_APS_EMPNO_NM(A.EMP_NO) AS EMP_NM,
                          A.STUDENT_CNT,
                          B.WTIME_NUM,
                          B.PTIME_NUM,
                          B.COM_GRADE,
                          B.COMDIV_CODE,
                          C.SUBJ_DESC_KOR,
                          C.SUBJ_DESC_ENG,
                          D.DEPT_NM,
                          D.DEPT_CD,
                          D.COLG_NM,
                          D.CATEGORY,
                          UF_GET_SYS020TB(B.SMT)                              AS SMT_NAME,
                          UF_GET_SYS020TB(B.COMDIV_CODE)                      AS COMDIV_CODE_NAME,
                          NVL(UF_SUG_MATRIX2(A.YEAR, A.SMT, #{subjectCd}, A.DIVCLS),' ') AS ROOM_TIME,
                          B.CDT_NUM                                            AS CDT_NUM
                 FROM     SUF.SUF110TB A
                          JOIN 
                          	SUF.SUF050TB B ON A.SUBJECT_CD = B.SUBJECT_CD AND A.SMT = B.SMT AND A.YEAR = B.YEAR
					      LEFT JOIN 
					      	SUF.SUF080TB C ON A.SUBJECT_CD = C.SUBJECT_CD AND A.SMT = C.SMT AND B.YEAR = C.YEAR AND B.DEPT_CD = C.DEPT_CD
					      JOIN 
					      	SCO.V_AI_ORG D ON B.DEPT_CD = D.DEPT_CD
                 WHERE    A.SUBJECT_CD       = #{subjectCd}
                 AND      A.SMT  	         = #{smt}
                 AND      A.YEAR             = #{year}
                 AND      D.DEPT_CD          = #{deptCd}
                 AND      A.DIVCLS           = #{divcls}
                 AND      A.EMP_NO           = #{empNo}
                 ORDER BY A.YEAR DESC)
		SELECT 
			* 
		FROM 
			CURR, 
			NOW_YEAR_SMT
		WHERE 
			CURR.YEAR = NOW_YEAR_SMT.YEAR
		AND CURR.SMT = NOW_YEAR_SMT.SMT <!-- 현재학기, 연도의 데이터만 가져온다 -->
	</select>
	
	<!-- 예비수강 신청 현황 조회 -->
	<select id="getPreApplSbjt" parameterType="String" resultType="dataMap">
		WITH NOW AS (SELECT YEAR, SMT
		FROM (
		    SELECT YEAR, SMT, FR_DT,
		           ROW_NUMBER() OVER (ORDER BY FR_DT DESC) AS rn
		    FROM SCO.SYS080TB
		    WHERE HAK_DESC LIKE '%수강편람%'
		    AND SMT IN ('GH0210','GH0220')
		    AND FR_DT &lt; TO_CHAR(SYSDATE, 'YYYYMMDD')
		    AND SINBUN_CODE = 'UD340001'
		) BASE
		WHERE rn = 1),
		CURR AS (
		select
		    base.YEAR,
		                     base.SMT,
		                     (SELECT UF_GET_COMMON_CODESET(base.SMT) FROM dual)                    AS SMT_NM,
		                     base.TRY_DEPT_CD														AS DEPT_CD,
		                     (SELECT UF_GET_ORG_CODESET('B', base.TRY_DEPT_CD) FROM dual)              AS COLG_NM,
		                     (SELECT UF_GET_ORG_CODESET('D', base.TRY_DEPT_CD) FROM dual)              AS DEPT_NM,
		                     base.TRY_GRADE																AS COM_GRADE,
		                     base.SUBJECT_CD,
		                     (SELECT UF_GET_SUBJECT_CODESET(base.SUBJECT_CD) FROM dual)            AS SUBJECT_NM,
		                     (SELECT SUBJECT_ENM FROM SUF010TB WHERE SUBJECT_CD = base.SUBJECT_CD) AS SUBJECT_ENM,
		                     base.COMDIV_CODE,
		                     (SELECT UF_GET_COMMON_CODESET(base.COMDIV_CODE) FROM dual)            AS COMDIV_NM,
		                     base.CDT_NUM,
		                     base.EMP_NO,
		                     UF_APS_EMPNO_NM(base.EMP_NO)                            AS EMP_NM,
		                     base.DIVCLS                                            AS DIVCLS,
		                     base.ORD												AS ORD
		    from SUG.SUG025TB base
		WHERE STUDENT_NO = #{STUDENT_NO})
		SELECT
		    CURR.*
		FROM
		    CURR,
		    NOW
		WHERE
		    CURR.YEAR = NOW.YEAR
		AND CURR.SMT = NOW.SMT
		ORDER BY CURR.ORD
	</select>


	<!-- 하..안쓰는거는 좀 지우지.... 개헷갈리네 -->
	<!-- 신청학점 및 평점 정보 -->
	<select id="getMrksList" parameterType="String" resultType="dataMap">
		SELECT 
			stuno
			,(AVG_MRKS * APLY_HP) AS tempData
			,AVG_MRKS
			,APLY_HP
		FROM INU_UNI.SCOR400
		WHERE STUNO = #{stuno}

	</select>
	
	<!-- 부전공 & 복수전공 체크 -->
	<select id="getMajorChk" parameterType="String" resultType="dataMap">
		SELECT 
			sr.APLY_YY
			,sr.APLY_TM_GBN
			,sr.HG_MJ_CD
			,(SELECT s.DEPT_NM FROM INU_ADM.STAF010 s WHERE sr.HG_MJ_CD = s.DEPT_CD) AS DEPT_NM
		FROM INU_UNI.SREG305 sr
		WHERE sr.STUNO = #{stuno} AND sr.MJ_GBN = #{mjGbn}

	</select>
	
	<!-- 부전공 & 복수전공 과목 이수구분별 성적 -->
	<select id="getMajorCptnHpList" parameterType="String" resultType="dataMap">
		
		SELECT 
			KOR_CD_NM ,CMMN_CD, SUM(HP) as HP, HG_MJ_CD
		FROM (
			SELECT 
				HP
				,(SELECT b.KOR_CD_NM FROM INU_COM.BSNS011 b, INU_UNI.COUR160 c WHERE b.CMMN_CD= c.CPTN_GBN AND s.DEPT_CLSF_CD = c.DEPT_CLSF_CD AND s.YY = c.YY AND s.TM_GBN = c.TM_GBN AND s.HAKSU_NO = c.HAKSU_NO AND b.RPST_CD='UC003') AS KOR_CD_NM
				,(SELECT b.CMMN_CD FROM INU_COM.BSNS011 b, INU_UNI.COUR160 c WHERE b.CMMN_CD= c.CPTN_GBN AND s.DEPT_CLSF_CD = c.DEPT_CLSF_CD AND s.YY = c.YY AND s.TM_GBN = c.TM_GBN AND s.HAKSU_NO = c.HAKSU_NO AND b.RPST_CD='UC003') AS CMMN_CD
				,(SELECT c.HG_MJ_CD FROM INU_UNI.COUR160 c WHERE s.DEPT_CLSF_CD = c.DEPT_CLSF_CD AND s.YY = c.YY AND s.TM_GBN = c.TM_GBN AND s.HAKSU_NO = c.HAKSU_NO) AS HG_MJ_CD
			FROM INU_UNI.SCOR300 s WHERE stuno =  #{stuno}  and CPTN_GBN =  #{cptnGbn} ANd MRKS_GRD_GBN != 'F'
		) GROUP BY KOR_CD_NM, CMMN_CD, HG_MJ_CD
	</select>
	
	<!-- 학기별 이수 현황 -->
	<select id="getTermHpList" parameterType="String" resultType="dataMap">
		SELECT 
			SC_CD
			,(SELECT SC_NM FROM INU_UNI.COUR001 i WHERE i.SC_CD= s.SC_CD ) AS KOR_SC_CD
			,(SELECT DEPT_NM FROM INU_UNI.COUR160 i, INU_ADM.STAF010 ss WHERE i.HG_MJ_CD = ss.DEPT_CD AND i.DEPT_CLSF_CD = s.DEPT_CLSF_CD AND i.YY = s.YY AND i.TM_GBN = s.TM_GBN  AND i.HAKSU_NO = s.HAKSU_NO AND i.SC_CD= s.SC_CD ) AS DEPT_NM
			,(SELECT b.KOR_CD_NM FROM INU_COM.BSNS011 b WHERE b.CMMN_CD= s.CPTN_GBN AND b.RPST_CD='UC003') AS KOR_CPTN_GBN
			,HP
			,CASE WHEN MRKS_GRD_GBN != 'F' THEN '이수' ELSE '미이수' END AS KOR_MRKS_GRD_GBN 
			,CASE WHEN MRKS_GRD_GBN != 'F' THEN HP ELSE 0 END AS HP2
		FROM INU_UNI.SCOR300 s WHERE stuno = #{stuno}  AND YY= #{yy} AND TM_GBN = #{tmGbn}

	</select>
	
	<!-- 입학년도  정보 -->
	
	<select id="getEntrYearInfo" parameterType="String" resultType="dataMap">
		SELECT 
			ENTR_YY
			,ENTR_TM_GBN
		FROM INU_UNI.SREG111 s WHERE stuno = #{stuno} 

	</select>
	
	<select id="getGrdtHpInfoOra" parameterType="String" resultType="dataMap">
		SELECT 
			ENTR_YY 
			,ENTR_TM_GBN 
			,CORS_GBN 
			,HG_MJ_CD
			,GRDT_CPTN_GBN
			,MIN_ACQ_HP 
		FROM INU_UNI.GRDT103 g 
		WHERE CORS_GBN = 0 
		AND ENTR_TM_GBN = #{entrTmGbn}
		AND ENTR_YY = #{entrYy}
		AND HG_MJ_CD =#{hgMjCd}

	</select>
	
	<select id="getGrdtMjHpInfoOra" parameterType="String" resultType="dataMap">
		SELECT 
			ENTR_YY 
			,ENTR_TM_GBN 
			,CORS_GBN 
			,HG_MJ_CD
			,MJ_ACQ_HP
			,MULT_MJ_ACQ_HP
			,CONN_MJ_ACQ_HP
			,MI_ACQ_HP
		FROM INU_UNI.GRDT102 g
		WHERE CORS_GBN = 0 
		AND ENTR_TM_GBN = #{entrTmGbn}
		AND ENTR_YY = #{entrYy}
		AND HG_MJ_CD =#{hgMjCd}

	</select>
	
	<select id="getCptnFld101Sum" parameterType="String" resultType="dataMap">
		SELECT 
			nvl(sum(HP),0) as HP
		FROM INU_UNI.SCOR300 
		WHERE stuno = #{stuno} 
		AND CPTN_FLD_GBN ='101'
		AND MRKS_GRD_GBN != 'F'

	</select>
	
	<select id="getCptnFld111to7Count" parameterType="java.util.HashMap" resultType="java.lang.Integer">
		SELECT 
			count(*)
		FROM
		(SELECT 
			CPTN_FLD_GBN
		FROM INU_UNI.SCOR300 
		WHERE stuno = #{stuno} 
		AND CPTN_FLD_GBN IN ('111', '112', '113', '114', '115', '116', '117')
		AND MRKS_GRD_GBN != 'F' GROUP BY CPTN_FLD_GBN)
	</select>
	
	<select id="getCptn21Count" parameterType="java.util.HashMap" resultType="java.lang.Integer">
		SELECT 
			count(*)
		FROM INU_UNI.SCOR300 
		WHERE stuno = #{stuno} 
		AND CPTN_GBN ='21'
		AND MRKS_GRD_GBN != 'F'

	</select>
	


    <!-- 1. 학생 기본 정보 조회 -->
    <select id="getSukangStudentInfo" parameterType="java.util.HashMap" resultType="dataMap">
        SELECT A.STUDENT_NO, A.SINBUN_CODE, A.HAKJUK_ST_CODE, A.NM, A.COLL_CD, C.DEPT_NM AS COLL_NM,
               A.DEPT_CD, NVL(D.DEPT_NM,' ') AS DEPT_NM, A.MAJOR_CD, NVL(E.DEPT_NM,' ') AS MAJOR_NM,
               NVL(A.CLASS_GRADE,A.GRADE) AS CLASS_GRADE, A.GRADE AS SUC_GRADE, A.GRADE_CODE,
               F.NM AS HAKJUK_NM, A.ENT_TP_CD, A.ENT_DT, NVL(A.ENT_YEAR,SUBSTR(A.ENT_DT,1,4)) AS ENT_YEAR,
               A.ENT_SMT, A.GRAD_CDT, A.GRAD_YEAR, A.DEG_GB_CODE, A.STU_CODE,
               NVL(D.CON_GB,0) AS CON_GB, G.SMAJOR_CD, G.MINOR_CD, G.FUSE_CD, G.LINK_CD,
               G.SMAJOR_NM, G.MINOR_NM, G.FUSE_NM, G.LINK_NM,
               UF_SUD_ISU_SMT(A.STUDENT_NO) AS ISU_SMT,
               DECODE(A.SINBUN_CODE ,'UD340001', DECODE(G.STU_NO_I, NULL,'', '신청'), A.SUK_CDT) AS TEACH_YN,
               CASE WHEN (A.SINBUN_CODE = 'UD340001' AND G.STU_NO_J IS NOT NULL)
                    OR (A.SINBUN_CODE IN ('UD340011','UD340015') AND G.STU_NO_K IS NOT NULL) THEN '신청' ELSE '' END AS DEGLINK_YN,
               CASE WHEN A.STU_CODE = 'UD350008' THEN A.ENT_YEAR ELSE TO_CHAR(A.ENT_YEAR - A.ENT_GRADE + 1) END AS VS_ENT_YEAR,
               CASE WHEN A.STUDENT_NO = A.SEAT_NUM THEN 'Y' ELSE 'N' END AS TEMP_STUDENT_YN
        FROM SUD010TB A
        LEFT JOIN SYS030TB C ON A.COLL_CD = C.DEPT_CD
        LEFT JOIN SYS030TB D ON A.DEPT_CD = D.DEPT_CD
        LEFT JOIN SYS030TB E ON A.MAJOR_CD = E.DEPT_CD
        LEFT JOIN SYS020TB F ON A.HAKJUK_ST_CODE = F.CODE
        LEFT JOIN (
            SELECT H.STUDENT_NO, SMAJOR_CD, MINOR_CD, FUSE_CD, LINK_CD,
                   SMAJOR_NM, MINOR_NM, FUSE_NM, LINK_NM,
                   I.STUDENT_NO AS STU_NO_I, J.STUDENT_NO AS STU_NO_J, K.GRAD_STUDENT_NO AS STU_NO_K
            FROM (
                SELECT STUDENT_NO,
                       MAX(DECODE(DUP_MAJ_GB, '1', DEPT_CD, '')) SMAJOR_CD,
                       MAX(DECODE(DUP_MAJ_GB, '1', DEPT_CDNM(DEPT_CD),'')) SMAJOR_NM,
                       MAX(DECODE(DUP_MAJ_GB, '2', DEPT_CD, '')) MINOR_CD,
                       MAX(DECODE(DUP_MAJ_GB, '2', DEPT_CDNM(DEPT_CD),'')) MINOR_NM,
                       MAX(DECODE(DUP_MAJ_GB, '3', DEPT_CD, '')) FUSE_CD,
                       MAX(DECODE(DUP_MAJ_GB, '3', DEPT_CDNM(DEPT_CD),'')) FUSE_NM,
                       MAX(DECODE(DUP_MAJ_GB, '4', DEPT_CD, '')) LINK_CD,
                       MAX(DECODE(DUP_MAJ_GB, '4', DEPT_CDNM(DEPT_CD),'')) LINK_NM
                FROM SUD120TB
                WHERE STUDENT_NO = #{STUDENT_NO}
                  AND CANCEL_DT IS NULL
                GROUP BY STUDENT_NO
            ) H
            LEFT JOIN SUK040TB I ON H.STUDENT_NO = I.STUDENT_NO AND I.RSG_DT IS NULL
            LEFT JOIN SUD180TB J ON H.STUDENT_NO = J.STUDENT_NO AND J.RSG_DT IS NULL
            LEFT JOIN SUD180TB K ON H.STUDENT_NO = K.GRAD_STUDENT_NO AND K.RSG_DT IS NULL
        ) G ON A.STUDENT_NO = G.STUDENT_NO
        WHERE A.STUDENT_NO = #{STUDENT_NO}
    </select>

    <!-- 2. 학년도 및 학기 정보 조회 -->
    <select id="getSukangAcademicYear" parameterType="java.util.HashMap" resultType="dataMap">
        SELECT SUBSTR(MAX_YEAR,1,4) AS YEAR, SUBSTR(MAX_YEAR,5) AS SMT
        FROM (
            SELECT MAX(YEAR || SMT) AS MAX_YEAR
            FROM SYS080TB
            WHERE DIV_CODE = 'SY010025'
              AND SINBUN_CODE = #{SINBUN_CODE}
              AND PT_CODE NOT IN ('SY020162','SY020188')
        )
    </select>

    <!-- 3. 수강신청 기간 체크 -->
    <select id="getSukangRegistrationPeriod" parameterType="java.util.HashMap" resultType="string">
        SELECT NVL(PT_CODE, 'SY020000') AS TIME_GB
        FROM SYS080TB
        WHERE DIV_CODE = 'SY010025'
          AND SINBUN_CODE = #{SINBUN_CODE}
          AND YEAR = #{YEAR}
          AND SMT = #{SMT}
          AND SYSDATE BETWEEN TO_DATE(FR_DT || NVL(FR_TIME,'000000'), 'YYYYMMDDHH24MISS')
                          AND TO_DATE(TO_DT || NVL(TO_TIME,'235959'), 'YYYYMMDDHH24MISS')
    </select>

    <!-- 4. 학생 상태 확인 -->
    <select id="getSukangStudentStatus" parameterType="java.util.HashMap" resultType="dataMap">
        SELECT 
            CASE WHEN HAKJUK_ST_CODE = 'UD030001' THEN 'Y' ELSE 'N' END AS IS_ENROLLED,
            CASE WHEN ENT_YEAR = #{YEAR} AND ENT_SMT = #{SMT} THEN 'Y' ELSE 'N' END AS IS_NEW_STUDENT,
            CASE WHEN ENT_TP_CD IN ('UD010002','UD020006','UD020009','UD020012','UD020020','UD020021','UD020022','UD020023') THEN 'Y' ELSE 'N' END AS IS_TRANSFER,
            CASE WHEN STU_CODE = 'UD350008' THEN 'Y' ELSE 'N' END AS IS_PART_TIME
        FROM SUD010TB
        WHERE STUDENT_NO = #{STUDENT_NO}
    </select>

    <!-- 5. 복학 상태 확인 -->
    <select id="getSukangReturnStatus" parameterType="java.util.HashMap" resultType="dataMap">
        SELECT 
            CASE WHEN EXISTS (
                SELECT 1 FROM SUD030TB
                WHERE STUDENT_NO = #{STUDENT_NO}
                  AND RTR_YEAR = #{YEAR}
                  AND RTR_SMT = #{SMT}
                  AND CHG_CD LIKE 'UD10%'
                  AND CANCEL_CODE IS NULL
            ) THEN 'Y' ELSE 'N' END AS IS_RETURNING,
            CASE WHEN EXISTS (
                SELECT 1 FROM SUD040TB
                WHERE STUDENT_NO = #{STUDENT_NO}
                  AND YEAR = #{YEAR}
                  AND SMT = #{SMT}
                  AND CHG_CD LIKE 'UD09%'
                  AND PRC_CODE = 'UD620001'
            ) THEN 'Y' ELSE 'N' END AS IS_RETURN_REQUESTED
        FROM DUAL
    </select>

    <!-- 6. 수강 가능 학점 계산 -->
    <select id="getSukangMaxCredits" parameterType="java.util.HashMap" resultType="int">
        SELECT 
            CASE 
                WHEN #{IS_PART_TIME} = 'Y' THEN 12
                WHEN #{SMT} IN ('GH0211', 'GH0221') THEN 6
                ELSE (
                    SELECT MAX_CDT 
                    FROM SUF130TB
                    WHERE YEAR = #{YEAR}
                      AND SMT = #{SMT}
                      AND TOT_CDT = #{GRAD_CDT}
                      AND DEPT_CD = #{MAJOR_CD}
                )
            END
        + CASE 
            WHEN #{SINBUN_CODE} = 'UD340001' AND #{IS_PART_TIME} = 'N' THEN
                NVL((SELECT SUM(APP_CDT) FROM SUH020TB WHERE STUDENT_NO = #{STUDENT_NO} AND YEAR = #{YEAR} AND SMT = #{SMT}), 0)
            ELSE 0
          END
        + CASE 
            WHEN #{SINBUN_CODE} = 'UD340001' AND #{ENT_TP_CD} = 'UD020026' THEN 3
            ELSE 0
          END
        + CASE 
            WHEN #{SMAJOR_CD} IS NOT NULL OR #{MINOR_CD} IS NOT NULL OR #{FUSE_CD} IS NOT NULL OR #{LINK_CD} IS NOT NULL THEN 3
            ELSE 0
          END AS MAX_CDT
        FROM DUAL
    </select>

    <!-- 7. 수강신청 내역 조회 -->
    <select id="getSukangRegisteredCredits" parameterType="java.util.HashMap" resultType="dataMap">
        SELECT NVL(SUM(NVL(CDT_NUM,0)),0) AS CDT_SUM,
               NVL(SUM(DECODE(COMDIV_CODE,'UE010031',NVL(CDT_NUM,0), 0)),0) AS CDT_TEACH_SUM
        FROM SUG025TB
        WHERE YEAR = #{YEAR}
          AND SMT = #{SMT}
          AND STUDENT_NO = #{STUDENT_NO}
    </select>

    <!-- 8. 로그인 정보 기록 -->
    <insert id="insertSukangLoginInfo" parameterType="java.util.HashMap">
        INSERT INTO SYS270TB (USER_ID, LOGIN_DT, USER_IP, LOGIN_GB, JOB_PRG_ID)
        VALUES (#{USERID}, SYSDATE, #{USER_IP}, #{LOGIN_GB}, #{JOB_PRG_ID})
    </insert>


</mapper>